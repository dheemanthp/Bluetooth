Delays while processing Data:
https://wladimir-tm4pda.github.io/porting/audio.html
https://wiki.merproject.org/wiki/Architecture#Multimedia
==============================
Radio signal processing
data buffering
encode/decode of the stream data. 
Encryption is optional

Audio Streaming Procedure:
L2cap ->AVDTP(Signalling/media channel) -> Decryption(optional)  -> Decoding

BIT RATE: KBits/sec
bit_rate = 8 * frame_length* fs / nrof_subbands / nrof_blocks
where fs, nrof_subbands and nrof_blocks denote sampling frequency, number of subbands and number of blocks, respectively. Bit Rate is expressed in kb/s, because fs is expressed in kHz.

signaling channel for SDP [PSM 01] protocol service multiplexer
signaling channel for AVDTP [PSM 19] protocol service multiplexer for Control channel
connection request
connect response
configure request
configure response
configure request
configure response
AVDTP SIGNALLING:
DISCOVER - Media type which is audio , and stream end point which is SNK.
GET CAPBILITIES - Get the capability for the stream end point.
  TRANSPORT
  CODEC : gives media type which is "audio"  and media codec type which is "SBC"
  CONTENT PROTECTION : SCMS-T

SET CONFIGURATION - set codec , sampling frequency, channel mode , block length , sub bands and allocation method which is 
(loudness or SNR) and also minimum and max bitpool
STREAM OPEN: open the media channel
signaling channel for AVDTP [PSM 19] protocol service multiplexer for Data channel
connection request
connect response
configure request
configure response
configure request
configure response
STREAM START
STREAM SUSPEND

The audio data rate should be sufficiently smaller than usable bit rate on the Bluetooth link.
This is to allow retransmission schemes to reduce the effects of packet loss.
The profile does not exclude any "content protection method". When content protection is in use, a content protection header may precede encrypted audio content. This is content protection method dependent

Countering the effects of such delays depends on implementation.

TODO:
Application service capability for A2DP : consists of audio codec capability and content protection capability
transport service capability : is provided by "AVDTP" in order to manipulate the streaming packets more intelligently.
Once streaming connection is established and Start Streaming procedure in "GAVDP" is executed

Audio codec interoperability and details of codec parameters:
1)Mode
2)Sampling frequency
3)Bit rate
===================================================================
ERROR DETECTION: CRC CHECK:https://www.geeksforgeeks.org/error-detection-in-computer-networks/
===================================================================
Basic approach used for error detection is the use of "redundancy bits", where additional bits are added to facilitate detection of errors.

Some popular techniques for error detection are:
1. Simple Parity check
Blocks of data from the source are subjected to a check bit or parity bit generator form, where a parity of :
1 is added to the block if it contains odd number of 1’s, and
0 is added if it contains even number of 1’s

2. Two-dimensional Parity check
Parity check bits are calculated for each row, which is equivalent to a simple parity check bit. Parity check bits are also calculated for all columns, then both are sent along with the data. 

3. Checksum - this is based on addition
divide into equal sized bits , and add all of them , and do 1’s complement , this is called checksum
the at the reciever's side , sum the  recieved bits  + then add CHECKSUM to it , and finally do a 1's compliment .
if the result is zero , then it is accepted.

4. Cyclic redundancy check - this is based on Division
Unlike checksum scheme, which is based on addition, CRC is based on binary division.
In CRC, a sequence of redundant bits, called cyclic redundancy check bits, are appended to the end of data unit so that the resulting data unit becomes exactly divisible by a second, predetermined binary number.
At the destination, the incoming data unit is divided by the same number. If at this step there is no remainder, the data unit is assumed to be correct and is therefore accepted.
A remainder indicates that the data unit has been damaged in transit and therefore must be rejected.





===================================================================
MEMORY MANAGEMENT IN C
===================================================================
MALLOC A HUGE CHUNK IS ALLOCATED
“malloc” or “memory allocation” method is used to dynamically allocate a single large block of memory with the specified size. It returns a pointer of type "void" which can be cast into a pointer of any form.If the space is insufficient, allocation fails and returns a NULL pointer.
ptr = (int*) malloc(100 * sizeof(int));

CALLOC a CHUNK WITH FRAGMENTS INITIALIZED TO ZERO
“calloc” or “contiguous allocation” method is used to dynamically allocate the specified number of blocks of memory of the specified type. It initializes each block with a default value ‘0’.If the space is insufficient, allocation fails and returns a NULL pointer.
ptr = (float*) calloc(25, sizeof(float));

“free” method is used to dynamically de-allocate the memory. The memory allocated using functions malloc() and calloc() are not de-allocated on their own. Hence the free() method is used, whenever the dynamic memory allocation takes place. It helps to reduce wastage of memory by freeing it.

REALLOC:
“realloc” or “re-allocation” method is used to dynamically change the memory allocation of a previously allocated memory. In other words, if the memory previously allocated with the help of malloc or calloc is insufficient, realloc can be used to dynamically re-allocate memory.
// Dynamically allocate memory using malloc() 
ptr = (int*)malloc(n * sizeof(int)); 
ptr = realloc(ptr, newSize); //where ptr is reallocated with new size 'newSize'.

ALLOCA:allocate memory that is automatically freed
alloca() allocates memory on the stack rather than on the heap, The alloca() function returns a pointer to the beginning of the allocated space.
Problems:
If the allocation causes stack overflow, program behaviour is undefined.
There is no error indication if the stack frame cannot be extended.
(However, after a failed allocation, the program is likely to receive a SIGSEGV signal if it attempts to access the unallocated space.)
On many systems alloca() cannot be used inside the list of arguments of a function call, because the stack space reserved by alloca()
would appear on the stack in the middle of the space for the function arguments.

MEMORY MANAGEMENT UNIT:
The set of all logical addresses generated by a program is referred to as a logical address space. The set of all physical addresses corresponding to these logical addresses is referred to as a physical address space.
The user program deals with virtual addresses; it never sees the real physical addresses. Which means it will use an offset.

===================================================================
Dangling Pointer in C : http://www.c4learn.com/c-programming/c-dangling-pointer-causes/
===================================================================
Dangling pointers arise when an object is deleted or de-allocated, without modifying the value of the pointer, so that the pointer still points to the memory location of the de-allocated memory.
In short pointer pointing to non-existing memory location is called  dangling pointer.

===================================================================
OS CONCEPTS: https://www.tutorialspoint.com/operating_system/os_memory_management.htm
===================================================================



