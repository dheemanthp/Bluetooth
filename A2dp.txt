Delays while processing Data:
==============================
Radio signal processing
data buffering
encode/decode of the stream data. 


The audio data rate should be sufficiently smaller than usable bit rate on the Bluetooth link.
This is to allow retransmission schemes to reduce the effects of packet loss.
The profile does not exclude any "content protection method". When content protection is in use, a content protection header may precede encrypted audio content. This is content protection method dependent

Countering the effects of such delays depends on implementation.

TODO:
Application service capability for A2DP : consists of audio codec capability and content protection capability
transport service capability : is provided by "AVDTP" in order to manipulate the streaming packets more intelligently.
Once streaming connection is established and Start Streaming procedure in "GAVDP" is executed

Audio codec interoperability and details of codec parameters:
1)Mode
2)Sampling frequency
3)Bit rate


===================================================================
MEMORY MANAGEMENT IN C
===================================================================
MALLOC A HUGE CHUNK IS ALLOCATED
“malloc” or “memory allocation” method is used to dynamically allocate a single large block of memory with the specified size. It returns a pointer of type "void" which can be cast into a pointer of any form.If the space is insufficient, allocation fails and returns a NULL pointer.
ptr = (int*) malloc(100 * sizeof(int));

CALLOC a CHUNK WITH FRAGMENTS INITIALIZED TO ZERO
“calloc” or “contiguous allocation” method is used to dynamically allocate the specified number of blocks of memory of the specified type. It initializes each block with a default value ‘0’.If the space is insufficient, allocation fails and returns a NULL pointer.
ptr = (float*) calloc(25, sizeof(float));

“free” method is used to dynamically de-allocate the memory. The memory allocated using functions malloc() and calloc() are not de-allocated on their own. Hence the free() method is used, whenever the dynamic memory allocation takes place. It helps to reduce wastage of memory by freeing it.

REALLOC:
“realloc” or “re-allocation” method is used to dynamically change the memory allocation of a previously allocated memory. In other words, if the memory previously allocated with the help of malloc or calloc is insufficient, realloc can be used to dynamically re-allocate memory.
// Dynamically allocate memory using malloc() 
ptr = (int*)malloc(n * sizeof(int)); 
ptr = realloc(ptr, newSize); //where ptr is reallocated with new size 'newSize'.

ALLOCA:allocate memory that is automatically freed
alloca() allocates memory on the stack rather than on the heap, The alloca() function returns a pointer to the beginning of the allocated space.
Problems:
If the allocation causes stack overflow, program behaviour is undefined.
There is no error indication if the stack frame cannot be extended.
(However, after a failed allocation, the program is likely to receive a SIGSEGV signal if it attempts to access the unallocated space.)
On many systems alloca() cannot be used inside the list of arguments of a function call, because the stack space reserved by alloca()
would appear on the stack in the middle of the space for the function arguments.

===================================================================
Dangling Pointer in C : http://www.c4learn.com/c-programming/c-dangling-pointer-causes/
===================================================================
Dangling pointers arise when an object is deleted or de-allocated, without modifying the value of the pointer, so that the pointer still points to the memory location of the de-allocated memory.
In short pointer pointing to non-existing memory location is called  dangling pointer.

===================================================================
OS CONCEPTS: https://www.tutorialspoint.com/operating_system/os_memory_management.htm
===================================================================



